@using AlteaTools.Api.Core.Extensions;
@using Altalents.Entities.Enum;
@model IndexMarqueDto

<script>
    var elementsLoad = [];
    var selectedSousRef = {
        "#SousReferencePaysIdsMultiSelect": ['@Html.Raw(String.Join("','", Model.SousReferencePays.Select(x => x.SousReferenceId.ToString())))'],
        "#SousReferenceTextesIdsMultiSelect": ['@Html.Raw(String.Join("','", Model.SousReferenceTextes.Select(x => x.SousReferenceId.ToString())))'],
        "#SousReferenceImagesIdsMultiSelect": ['@Html.Raw(String.Join("','", Model.SousReferenceImages.Select(x => x.SousReferenceId.ToString())))'],
        "#SousReferenceCouleursIdsMultiSelect": ['@Html.Raw(String.Join("','", Model.SousReferenceCouleurs.Select(x => x.SousReferenceId.ToString())))'],
        "#SousReferenceTechniquesIdsMultiSelect": ['@Html.Raw(String.Join("','", Model.SousReferenceTechniques.Select(x => x.SousReferenceId.ToString())))'],
        "#SousReferenceLocalisationsIdsMultiSelect": ['@Html.Raw(String.Join("','", Model.SousReferenceLocalisations.Select(x => x.SousReferenceId.ToString())))'],
        "#SousReferenceCategoriesIdsMultiSelect": ['@Html.Raw(String.Join("','", Model.SousReferenceCategories.Select(x => x.SousReferenceId.ToString())))'],
        "#SousReferenceContoursIdsMultiSelect": ['@Html.Raw(String.Join("','", Model.SousReferenceContours.Select(x => x.SousReferenceId.ToString())))'],
    };

    $(function () {
        $('#divSousReferenceTextes').hide();
        $('#divSousReferencePays').hide();
        $('#divSousReferenceImages').hide();
        $('#divSousReferenceCouleurs').hide();
        $('#divSousReferenceTechniques').hide();
        $('#divSousReferenceLocalisations').hide();
        $('#divSousReferenceCategories').hide();
        $('#divSousReferenceContours').hide();
        $('#PartialViewMotLatinMarque').hide();
        $('#PartialViewInitialeLatineMarque').hide();

        setTimeout(function () {
            onChangeReferencePaysMultiselect(null);
            onChangeReferenceTextesMultiselect(null);
            onChangeReferenceImagesMultiselect(null);
            onChangeReferenceCouleursMultiselect(null);
            onChangeReferenceTechniquesMultiselect(null);
            onChangeReferenceLocalisationsMultiselect(null);
            onChangeReferenceCategoriesMultiselect(null);
            onChangeReferenceContoursMultiselect(null);
        }, 1000);
        reloadBoutonRenvois('@Model.IdMarque');
    })

    function getTitreGestionIndexMarqueDialog(actionDialog) {
        return actionDialog + " de la marque " + '@Model.ReferenceLugt';
    }

    function onAddRenvoisClick() {
        let titreDialog = getTitreGestionIndexMarqueDialog('@LibellesResources.MarqueGestionRenvois');

        $.ajax({
            url: '@Url.Action("LoadMarqueRenvoisInMarqueRenvoisTemporaires", MarqueController.ControllerName, new { marqueId = Model.IdMarque })',
            type: "POST",
            success: function (recData) {
                $.ajax({
                    url: '@Url.Action("PartialViewGridMarques", MarqueController.ControllerName, new { marqueId = Model.IdMarque })',
                    type: "POST",
                    success: function (recData) {
                        openDialog('#gestionIndexMarqueDialog', titreDialog, recData);
                    },
                    error: erreurFunction
                });
            },
            error: erreurFunction
        })
    }

    function onChangeMultiselect(idDivSousReference, referenceIds, idDivReference, sousReferenceMultiSelectId, callbackWithSousRef) {
        var referenceIds = $(referenceIds).data("kendoMultiSelect").value();

        $.ajax({
            url: '@Url.Action("CheckListeReferencesHasAnySousReference", ReferenceController.ControllerName)',
            type: "POST",
            data: { referenceIds: referenceIds },
            dataType: "json",
            success: function (recData) {
                callBackHasSousReference(idDivSousReference, idDivReference, recData, sousReferenceMultiSelectId, callbackWithSousRef);
            },
            error: erreurFunction
        });
    }

    function reloadPartialViewSousReference(selectedReferencesIds, sousReferenceMultiSelectId, partialViewId, onChangeAction) {
        $.ajax({
            url: '@Url.Action("PartialViewSousReference", MarqueController.ControllerName)',
            type: "POST",
            data: {
                request: {
                    ReferenceIds: getSelectedReferencesIds("#" + selectedReferencesIds),
                    MultiSelectId: sousReferenceMultiSelectId,
                    SousReferenceIdsSelected: getSelectedReferencesIds("#" + sousReferenceMultiSelectId),
                    OnChangeAction: onChangeAction
                }
            },
            success: function (recData) { $('#' + partialViewId).html(recData) },
            error: erreurFunction
        });
    }

    function reloadAffichageBtnNiveau3(sousReferenceMultiSelectId, refMultiSelectId) {
        var sousReferencesIds = getSelectedReferencesIds(sousReferenceMultiSelectId);
        var ReferencesIds = getSelectedReferencesIds(refMultiSelectId);

        $('#PartialViewMotLatinMarque').hide();
        $('#PartialViewInitialeLatineMarque').hide();

        if (sousReferencesIds.includes('@(EnumSousReference.MotLatin.GetBddId())') && ReferencesIds.includes('@(EnumReference.Mot.GetBddId())')) {
            $('#PartialViewMotLatinMarque').show();
        }

        if (sousReferencesIds.includes('@(EnumSousReference.InitialeLatin.GetBddId())') && ReferencesIds.includes('@(EnumReference.Initiale.GetBddId())')) {
            $('#PartialViewInitialeLatineMarque').show();
        }
    }

    function onAddNomClick() {
        $.ajax({
            url: '@Url.Action("PartialViewAddNomMarque", MarqueController.ControllerName, new { marqueId = Model.IdMarque })',
            type: "POST",
            success: function (recData) {
                openDialog('#addNomMarqueDialog', 'Ajouter un nom', recData);
            },
            error: erreurFunction
        });
    }

    function reloadBoutonRenvois(marqueId) {
        $.ajax({
            url: '@Url.Action("GetNombreMarqueAssociesByMarqueId", MarqueController.ControllerName)',
            type: "POST",
            data: { marqueId: marqueId },
            success: function (recData) {
                var nombreRenvois = recData.Result.Data[0].NombreRenvois;
                var texte = '@LibellesResources.MarqueGestionRenvois' + " (" + nombreRenvois + " marque(s) associ√©e(s))";
                $("#AddRenvoisBtn").html(texte);
            },
            error: erreurFunction
        });
    }

    function addElementOnLoad() {
        elementsLoad.push("");
        if (elementsLoad.length === @Model.TotalElementACharger) {
            closeDialog("#loadingDialog");
        }
    }
</script>

<div class="row cus-mt-10">
    <div class="col-2">
        @Html.LabelFor(model => model.NomPrincipal, LibellesResources.MarqueNomPrincipal)
    </div>
    <div class="col-10">
        @(Html.Kendo().ComboBox()
            .CreateDefautComboBox("dropDownMarqueNomPrincipal", "", nameof(ReferenceDto.LibelleFr), nameof(ReferenceDto.ReferenceId), hasAutoBind: Model.NomPrincipal != null)
            .Value(Model.NomPrincipal?.ReferenceId.ToString())
            .CreateDefautComboBoxDataSource("GetReferencesType", ReferenceController.ControllerName, new { type = EnumTypeReference.Nom })
            )
        @Html.ValidationMessageFor(model => model.NomPrincipal)
    </div>
</div>

<div class="row cus-mt-10">
    <div class="col-2">
        @Html.LabelFor(model => model.ReferenceNoms, LibellesResources.MarqueNoms)
    </div>
    <div class="col-9">
        @(Html.Kendo().MultiSelect().CreateDefautMultiSelectReference(Model.ReferenceNoms, "ReferenceNomIds", EnumTypeReference.Nom, "addElementOnLoad", withAutoBind: true))
        @Html.ValidationMessageFor(model => model.ReferenceNoms)
    </div>
    <div class="col-1">
        @(Html.Kendo().Button().CreateDefautButtonAjouterIcon("ajoutNomButton", "onAddNomClick"))
    </div>
</div>

<div class="row cus-mt-10">
    <div class="col-2">
        @Html.LabelFor(model => model.ReferencePays, LibellesResources.MarquePays)
    </div>
    <div id="divReferencePays" class="col-10">
        @(Html.Kendo().MultiSelect().CreateDefautMultiSelectReference(Model.ReferencePays, "ReferencePaysIds", EnumTypeReference.Pays, "addElementOnLoad", onChangeAction: "onChangeReferencePaysMultiselect"))
        @Html.ValidationMessageFor(model => model.ReferencePays)
    </div>
    <div id="divSousReferencePays" class="col-5">
        <div class="col-lg-12 col-md-12 col-xs-12" id="PartialViewSousReferencesPays"></div>
    </div>
</div>

<div class="row cus-mt-10">
    <div class="col-2">
        @Html.LabelFor(model => model.ReferenceTextes, LibellesResources.MarqueTextes)
    </div>
    <div id="divReferenceTextes" class="col-10">
        @(Html.Kendo().MultiSelect().CreateDefautMultiSelectReference(Model.ReferenceTextes, "ReferenceTextesIds", EnumTypeReference.Texte, "addElementOnLoad", onChangeAction: "onChangeReferenceTextesMultiselect"))
        @Html.ValidationMessageFor(model => model.ReferenceTextes)
    </div>
    <div id="divSousReferenceTextes" class="col-5">
        <div class="col-lg-12 col-md-12 col-xs-12" id="PartialViewSousReferencesTextes"></div>
    </div>
</div>

<div class="row cus-mt-10">
    <div class="col-2">
        @Html.LabelFor(model => model.Initiales, LibellesResources.MarqueInitiales)
    </div>
    <div class="col-10">
        @Html.Kendo().TextBoxFor(model => model.Initiales).HtmlAttributes(new { @maxlength = MaxSizeConstantes.MARQUE_INITIALES })
        @Html.ValidationMessageFor(model => model.Initiales)
    </div>
</div>

<div class="row cus-mt-10">
    <div class="col-2">
        @Html.LabelFor(model => model.ReferenceImages, LibellesResources.MarqueImages)
    </div>
    <div id="divReferenceImages" class="col-10">
        @(Html.Kendo().MultiSelect().CreateDefautMultiSelectReference(Model.ReferenceImages, "ReferenceImagesIds", EnumTypeReference.Image, "addElementOnLoad", onChangeAction: "onChangeReferenceImagesMultiselect"))
        @Html.ValidationMessageFor(model => model.ReferenceImages)
    </div>
    <div id="divSousReferenceImages" class="col-5">
        <div class="col-lg-12 col-md-12 col-xs-12" id="PartialViewSousReferencesImages"></div>
    </div>
</div>

<div class="row cus-mt-10">
    <div class="col-2">
        @Html.LabelFor(model => model.ReferenceCouleurs, LibellesResources.MarqueCouleurs)
    </div>
    <div id="divReferenceCouleurs" class="col-10">
        @(Html.Kendo().MultiSelect().CreateDefautMultiSelectReference(Model.ReferenceCouleurs, "ReferenceCouleursIds", EnumTypeReference.Couleur, "addElementOnLoad", onChangeAction: "onChangeReferenceCouleursMultiselect"))
        @Html.ValidationMessageFor(model => model.ReferenceCouleurs)
    </div>
    <div id="divSousReferenceCouleurs" class="col-5">
        <div class="col-lg-12 col-md-12 col-xs-12" id="PartialViewSousReferencesCouleurs"></div>
    </div>
</div>

<div class="row cus-mt-10">
    <div class="col-2">
        @Html.LabelFor(model => model.ReferenceTechniques, LibellesResources.MarqueTechnique)
    </div>
    <div id="divReferenceTechniques" class="col-10">
        @(Html.Kendo().MultiSelect().CreateDefautMultiSelectReference(Model.ReferenceTechniques, "ReferenceTechniquesIds", EnumTypeReference.Technique, "addElementOnLoad", onChangeAction: "onChangeReferenceTechniquesMultiselect"))
        @Html.ValidationMessageFor(model => model.ReferenceTechniques)
    </div>
    <div id="divSousReferenceTechniques" class="col-5">
        <div class="col-lg-12 col-md-12 col-xs-12" id="PartialViewSousReferencesTechniques"></div>
    </div>
</div>

<div class="row cus-mt-10">
    <div class="col-2">
        @Html.LabelFor(model => model.ReferenceLocalisations, LibellesResources.MarqueLocalisation)
    </div>
    <div id="divReferenceLocalisations" class="col-10">
        @(Html.Kendo().MultiSelect().CreateDefautMultiSelectReference(Model.ReferenceLocalisations, "ReferenceLocalisationsIds", EnumTypeReference.Localisation, "addElementOnLoad", onChangeAction: "onChangeReferenceLocalisationsMultiselect"))
        @Html.ValidationMessageFor(model => model.ReferenceLocalisations)
    </div>
    <div id="divSousReferenceLocalisations" class="col-5">
        <div class="col-lg-12 col-md-12 col-xs-12" id="PartialViewSousReferencesLocalisations"></div>
    </div>
</div>

<div class="row cus-mt-10">
    <div class="col-2">
        @Html.LabelFor(model => model.ReferenceCategories, LibellesResources.MarqueCategorie)
    </div>
    <div id="divReferenceCategories" class="col-10">
        @(Html.Kendo().MultiSelect().CreateDefautMultiSelectReference(Model.ReferenceCategories, "ReferenceCategoriesIds", EnumTypeReference.Categorie, "addElementOnLoad", onChangeAction: "onChangeReferenceCategoriesMultiselect"))
        @Html.ValidationMessageFor(model => model.ReferenceCategories)
    </div>
    <div id="divSousReferenceCategories" class="col-5">
        <div class="col-lg-12 col-md-12 col-xs-12" id="PartialViewSousReferencesCategories"></div>
    </div>
</div>

<div class="row cus-mt-10">
    <div class="col-2">
        @Html.LabelFor(model => model.ReferenceContours, LibellesResources.MarqueContour)
    </div>
    <div id="divReferenceContours" class="col-10">
        @(Html.Kendo().MultiSelect().CreateDefautMultiSelectReference(Model.ReferenceContours, "ReferenceContoursIds", EnumTypeReference.Contour, "addElementOnLoad", onChangeAction: "onChangeReferenceContoursMultiselect"))
        @Html.ValidationMessageFor(model => model.ReferenceContours)
    </div>
    <div id="divSousReferenceContours" class="col-5">
        <div class="col-lg-12 col-md-12 col-xs-12" id="PartialViewSousReferencesContours"></div>
    </div>
</div>

<div class="row cus-mt-10">
    <div class="col-2">
        @Html.LabelFor(model => model.Haut, LibellesResources.MarqueHauteur)
    </div>
    <div class="col-10">
        @Html.Kendo().NumericTextBoxFor(model => model.Haut).Culture("fr-FR").Decimals(1).Format("#.0").Min(0)
        @Html.ValidationMessageFor(model => model.Haut)
    </div>
</div>

<div class="row cus-mt-10">
    <div class="col-2">
        @Html.LabelFor(model => model.Larg, LibellesResources.MarqueLargeur)
    </div>
    <div class="col-10">
        @Html.Kendo().NumericTextBoxFor(model => model.Larg).Culture("fr-FR").Decimals(1).Format("#.0").Min(0)
        @Html.ValidationMessageFor(model => model.Larg)
    </div>
</div>

@if (Model.IsFinalize)
{
    @(Html.Kendo().Button().CreateDefautButton("AddRenvoisBtn", "", "onAddRenvoisClick", classCss: "cus-width-max cus-mt-10"))
}
@(Html.Kendo().Dialog().CreateDefautDialog("gestionIndexMarqueDialog", height: "70%"))
@(Html.Kendo().Dialog().CreateDefautDialog("addNomMarqueDialog"))

<script>
    function saveMarqueIndex() {
        var nomPrincipal = $("#dropDownMarqueNomPrincipal").data("kendoComboBox").value();
        if (nomPrincipal == "") {
            showBusinessMessage('@BusinessExceptionsResources.NOM_PRINCIPAL_OBLIGATOIRE');
            return;
        }

        var data = {
            idMarque: "@Model.IdMarque",
            Largeur: $("#Larg").val(),
            Hauteur: $("#Haut").val(),
            initiales: $("#Initiales").val(),
            ReferenceNomIds: getSelectedReferencesIds("#ReferenceNomIds"),
            ReferencePaysIds: getSelectedReferencesIds("#ReferencePaysIds"),
            SousReferencePaysIds: getSelectedReferencesIds("#SousReferencePaysIdsMultiSelect"),
            ReferenceTextesIds: getSelectedReferencesIds("#ReferenceTextesIds"),
            SousReferenceTextesIds: getSelectedReferencesIds("#SousReferenceTextesIdsMultiSelect"),
            ReferenceImagesIds: getSelectedReferencesIds("#ReferenceImagesIds"),
            SousReferenceImagesIds: getSelectedReferencesIds("#SousReferenceImagesIdsMultiSelect"),
            ReferenceCouleursIds: getSelectedReferencesIds("#ReferenceCouleursIds"),
            SousReferenceCouleursIds: getSelectedReferencesIds("#SousReferenceCouleursIdsMultiSelect"),
            ReferenceTechniquesIds: getSelectedReferencesIds("#ReferenceTechniquesIds"),
            SousReferenceTechniquesIds: getSelectedReferencesIds("#SousReferenceTechniquesIdsMultiSelect"),
            ReferenceLocalisationsIds: getSelectedReferencesIds("#ReferenceLocalisationsIds"),
            SousReferenceLocalisationsIds: getSelectedReferencesIds("#SousReferenceLocalisationsIdsMultiSelect"),
            ReferenceCategoriesIds: getSelectedReferencesIds("#ReferenceCategoriesIds"),
            SousReferenceCategoriesIds: getSelectedReferencesIds("#SousReferenceCategoriesIdsMultiSelect"),
            ReferenceContoursIds: getSelectedReferencesIds("#ReferenceContoursIds"),
            SousReferenceContoursIds: getSelectedReferencesIds("#SousReferenceContoursIdsMultiSelect"),
            ReferenceNomPrincipalId: nomPrincipal,
        };

        return $.ajax({
            url: '@Url.Action("UpdateIndexMarque", MarqueController.ControllerName)',
            type: "PUT",
            data: data
        });
    }
</script>
