@model PartialViewGridSousReferencesModel
@{
    Dictionary<GridActionEnum, RouteActionModel> gridSousReferenceActionDictionary = new();
    gridSousReferenceActionDictionary.Add(GridActionEnum.Get, new() { ActionName = "GetSousReferences", ControllerName = ReferenceController.ControllerName, Parameters = new { referenceId = Model.ReferenceId } });
    gridSousReferenceActionDictionary.Add(GridActionEnum.Create, new() { ActionName = "CreateSousReference", ControllerName = ReferenceController.ControllerName, Parameters = new { referenceId = Model.ReferenceId } });
    gridSousReferenceActionDictionary.Add(GridActionEnum.Update, new() { ActionName = "UpdateSousReference", ControllerName = ReferenceController.ControllerName });
}

<script>
    function reloadGridSousReference(e) {
        var grid = $("#gridSousReferences").data("kendoGrid");
        grid.dataSource.read();
    }

    function OnPopUpOpenEditSousReference(e) {
        let parent = $(e.container).parent();
        let titleSpan = $('.k-window-title', parent);

        if (e.model.isNew()) {
            titleSpan.text('Ajouter un mot-clé')
        } else {
            titleSpan.text('Modifier un mot-clé');
        }
    }

    function actionConfirmationSuppressionSousReference(sousReferenceId, callbackFinalize) {
        $.ajax({
            url: '@Url.Action("DeleteSousReference", ReferenceController.ControllerName)',
            type: "POST",
            data: { sousReferenceId: sousReferenceId },
            success: function (recData) {
                if (recData.Errors) {
                    erreurFunction(recData.Errors);
                }
                else {
                    suppressionReussie();
                    reloadGridSousReference();
                }
            },
            error: erreurFunction,
            finalize: function () {
                callbackFinalize();
            }
        });
    }

    function actionNonConfirmationSousReference(callbackFinalize) {
        callbackFinalize();
    }

    function onSupprimerSousReferenceClick(e) {
        var functionOnConfirmation = function (callbackFinalize) {
            actionConfirmationSuppressionSousReference(e.model.SousReferenceId, callbackFinalize);
        }
        openConfirmationSuppressionDialog(functionOnConfirmation, actionNonConfirmationSousReference);
    }

</script>

<h4>Mots-clés associés :</h4>
@(Html.Kendo().Grid<SousReferenceDto>()
    .Name("gridSousReferences")
    .HtmlAttributes(new { @class = "cus-grid-height100p" })
    .Columns(columns =>
    {
        columns.Bound(p => p.LibelleFr).Title(LibellesResources.ReferenceLibelleFr);
        columns.Bound(p => p.OrdreFr).Title(LibellesResources.ReferenceOrdreFr)
                                     .Width(CssConstantes.WidthGridColumnOrdre)
                                 .Filterable(false);
        if (Model.WithSecondeLangue)
        {
            columns.Bound(p => p.Libelle2).Title(LibellesResources.ReferenceLibelle2);
            columns.Bound(p => p.Ordre2).Title(LibellesResources.ReferenceOrdre2)
                                        .Width(CssConstantes.WidthGridColumnOrdre)
                                                    .Filterable(false);
        }
        columns.Bound(p => p.NombreMarque).Title(LibellesResources.ReferenceNombreMarque)
                                          .Filterable(false)
                                          .Width(CssConstantes.WidthGridColumnNombreElementsAssocies)
                                          .ClientTemplate("#=templateNombreMarqueSousReferenceBtn(data)#");
        columns.CreateDefaultCommands(nameof(SousReferenceDto));
    })
    .Events(e => e.DataBound("onDataBoundSousReferences"))
    .Sortable()
    .Filterable()
    .Scrollable()
    .CreateDefautPagger()
    .CreateDefautToolBar()
    .Search(s =>
    {
        s.Field(o => o.LibelleFr, "contains");
        s.Field(o => o.Libelle2, "contains");
    })
    .CreateDefautDataSource(gridSousReferenceActionDictionary, model => model.Id(p => p.SousReferenceId), "LibelleFr")
    .CreateDefautPopUpEdit("AddOrUpdateSousReferencePopUp", "OnPopUpOpenEditSousReference", "onSupprimerSousReferenceClick", actionOnCancel: "reloadGridSousReference", additionalViewData: new { WithSecondeLangue = Model.WithSecondeLangue })
)

<script>
    var templateNombreMarqueSousReferenceBtn = kendo.template($('#templateNombreMarqueSousReferenceBtn').html());
</script>

<script type="text/x-kendo-template" id="templateNombreMarqueSousReferenceBtn">
    <button
        type="button"
        onClick="openMarquesModal(this)"
        class="k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary k-icon-button"
        attrIdReference="#= ReferenceId #"
        attrIdSousReference="#= SousReferenceId #"
        attrLibelleReference="#= LibelleFr#">
            #= NombreMarque #
    </button>
</script>
