@model PartialViewGridReferencesModel
@{
    Dictionary<GridActionEnum, RouteActionModel> gridReferenceActionDictionary = new();
    gridReferenceActionDictionary.Add(GridActionEnum.Get, new() { ActionName = "GetReferences", ControllerName = ReferenceController.ControllerName, Parameters = new { typeId = Model.TypeId } });
    gridReferenceActionDictionary.Add(GridActionEnum.Create, new() { ActionName = "CreateReference", ControllerName = ReferenceController.ControllerName, Parameters = new { typeId = Model.TypeId } });
    gridReferenceActionDictionary.Add(GridActionEnum.Update, new() { ActionName = "UpdateReference", ControllerName = ReferenceController.ControllerName });
}

<script>
    function reloadGridReference(e) {
        var grid = $("#gridReferences").data("kendoGrid");
        grid.dataSource.read();
    }

    function OnPopUpOpenEditReference(e) {
        let parent = $(e.container).parent();
        let titleSpan = $('.k-window-title', parent);

        if (e.model.isNew()) {
            titleSpan.text('Ajouter un mot-clé');
        } else {
            titleSpan.text('Modifier un mot-clé');
        }
    }

    function actionConfirmationSuppressionReference(referenceId, callbackFinalize) {
        $.ajax({
            url: '@Url.Action("DeleteReference", ReferenceController.ControllerName)',
            type: "POST",
            data: { referenceId: referenceId },
            success: function (recData) {
                if (recData.Errors) {
                    erreurFunction(recData.Errors);
                }
                else {
                    suppressionReussie();
                    reloadGridReference();
                }
            },
            error: erreurFunction,
            finalize: function () {
                callbackFinalize();
            }
        });
    }

    function actionNonConfirmationReference(callbackFinalize) {
        callbackFinalize();
    }

    function onSupprimerReferenceClick(e) {
        var functionOnConfirmation = function (callbackFinalize) {
            actionConfirmationSuppressionReference(e.model.ReferenceId, callbackFinalize);
        }
        openConfirmationSuppressionDialog(functionOnConfirmation, actionNonConfirmationReference);
    }

</script>

@(Html.Kendo().Grid<ReferenceDto>()
    .Name("gridReferences")
    .HtmlAttributes(new { @class = "cus-grid-height100p" })
    .Columns(columns =>
    {
        columns.Bound(p => p.LibelleFr).Title(LibellesResources.ReferenceLibelleFr);
        columns.Bound(p => p.OrdreFr).Title(LibellesResources.ReferenceOrdreFr)
                                     .Width(CssConstantes.WidthGridColumnOrdre)
                                     .Filterable(false);
        if (Model.WithSecondeLangue)
        {
            columns.Bound(p => p.Libelle2).Title(LibellesResources.ReferenceLibelle2);
            columns.Bound(p => p.Ordre2).Title(LibellesResources.ReferenceOrdre2)
                            .Width(CssConstantes.WidthGridColumnOrdre)
                            .Filterable(false);
        }
        if (Model.WithSousReference)
        {
            columns.Bound(p => p.NombreSousReference).Title(LibellesResources.ReferenceNombreSousReference)
                                                     .Filterable(false)
                                                     .Width(CssConstantes.WidthGridColumnNombreElementsAssocies)
                                                     .ClientTemplate("#=templateNombreSousReferenceBtn(data)#");
        }
        columns.Bound(p => p.NombreMarque).Title(LibellesResources.ReferenceNombreMarque)
                                          .Filterable(false)
                                          .Width(CssConstantes.WidthGridColumnNombreElementsAssocies)
                                          .ClientTemplate("#=templateNombreMarqueBtn(data)#");
        columns.CreateDefaultCommands(nameof(ReferenceDto));
    })
    .Events(e => e.DataBound("onDataBoundReferences"))
    .Sortable()
    .Filterable()
    .Scrollable()
    .CreateDefautPagger()
    .CreateDefautToolBar()
    .Search(s =>
    {
        s.Field(o => o.LibelleFr, "contains");
        s.Field(o => o.Libelle2, "contains");
    })
    .CreateDefautDataSource(gridReferenceActionDictionary, model => model.Id(p => p.ReferenceId), nameof(ReferenceDto.LibelleFr))
    .CreateDefautPopUpEdit("AddOrUpdateReferencePopUp", "OnPopUpOpenEditReference", "onSupprimerReferenceClick", actionOnCancel: "reloadGridReference", additionalViewData: new { WithSecondeLangue = Model.WithSecondeLangue })
)

@(Html.Kendo().Dialog()
    .CreateDefautDialog("sousReferenceDialog")
    .Events(e => e.Close("reloadGridReference"))
    )

@(Html.Kendo().Dialog()
    .CreateDefautDialog("marqueDialog")
    .Events(e => e.Close("reloadGridReference"))
    )

<script>
    // NOMBRE SOUS REFERENCES
    var templateNombreSousReferenceBtn = kendo.template($('#templateNombreSousReferenceBtn').html());
    openSousReferencesModal = (target) => {
        let idReference = target.getAttribute('attrIdReference');
        let libelleReference = target.getAttribute('attrLibelleReference');

        $.ajax({
            url: '@Url.Action("PartialViewGridSousReferences", ReferenceController.ControllerName)',
            type: "POST",
            data: { idReference: idReference },
            success: function (recData) {
                openDialog('#sousReferenceDialog', libelleReference, recData);
            },
            error: erreurFunction
        });
    }

    // NOMBRE MARQUES
    var templateNombreMarqueBtn = kendo.template($('#templateNombreMarqueBtn').html());
    openMarquesModal = (target) => {
        let idReference = target.getAttribute('attrIdReference');
        let idSousReference = target.getAttribute('attrIdSousReference');
        let libelleReference = target.getAttribute('attrLibelleReference');

        $.ajax({
            url: '@Url.Action("PartialViewGridMarques", MarqueController.ControllerName)',
            type: "POST",
            data: { idReference: idReference, idSousReference: idSousReference },
            success: function (recData) {                
                openDialog('#marqueDialog', libelleReference, recData);
            },
            error: erreurFunction
        });
    }
</script>

<script type="text/x-kendo-template" id="templateNombreSousReferenceBtn">
    <button
        type="button"
        onClick="openSousReferencesModal(this)"
        class="k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary k-icon-button"
        attrIdReference="#= ReferenceId #"
        attrLibelleReference="#= LibelleFr#">
            #= NombreSousReference #
    </button>
</script>

<script type="text/x-kendo-template" id="templateNombreMarqueBtn">
    <button
        type="button"
        onClick="openMarquesModal(this)"
        class="k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary k-icon-button"
        attrIdReference="#= ReferenceId #"
        attrLibelleReference="#= LibelleFr#">
            #= NombreMarque #
    </button>
</script>
