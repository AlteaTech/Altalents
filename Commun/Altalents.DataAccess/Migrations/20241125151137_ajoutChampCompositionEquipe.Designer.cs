// <auto-generated />
using System;
using Altalents.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Altalents.DataAccess.Migrations
{
    [DbContext(typeof(MigrationContext))]
    [Migration("20241125151137_ajoutChampCompositionEquipe")]
    partial class ajoutChampCompositionEquipe
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Altalents.Entities.Adresse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adresse1")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Adresse2")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar");

                    b.Property<string>("CodePostal")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("DateCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateMaj")
                        .HasColumnType("datetime");

                    b.Property<string>("Pays")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar");

                    b.Property<Guid>("PersonneId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UtiCrea")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UtiMaj")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.HasIndex("PersonneId");

                    b.ToTable("Adresses", (string)null);
                });

            modelBuilder.Entity("Altalents.Entities.Certification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateFin")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateMaj")
                        .HasColumnType("datetime");

                    b.Property<string>("Domaine")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar");

                    b.Property<Guid>("DossierTechniqueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Niveau")
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("Organisme")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar");

                    b.Property<string>("UtiCrea")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UtiMaj")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DossierTechniqueId");

                    b.ToTable("Certifications", (string)null);
                });

            modelBuilder.Entity("Altalents.Entities.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateMaj")
                        .HasColumnType("datetime");

                    b.Property<Guid>("PersonneId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UtiCrea")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UtiMaj")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Valeur")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.HasIndex("PersonneId");

                    b.HasIndex("TypeId");

                    b.ToTable("Contacts", (string)null);
                });

            modelBuilder.Entity("Altalents.Entities.Document", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("DateCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateMaj")
                        .HasColumnType("datetime");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar");

                    b.Property<Guid>("PersonneId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UtiCrea")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UtiMaj")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("PersonneId");

                    b.HasIndex("TypeId");

                    b.ToTable("Documents", (string)null);
                });

            modelBuilder.Entity("Altalents.Entities.DocumentComplementaire", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Commentaire")
                        .HasColumnType("varchar(max)");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("DateCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateMaj")
                        .HasColumnType("datetime");

                    b.Property<Guid>("DossierTechniqueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar");

                    b.Property<string>("UtiCrea")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UtiMaj")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DossierTechniqueId");

                    b.ToTable("DocumentComplementaires", (string)null);
                });

            modelBuilder.Entity("Altalents.Entities.DossierTechnique", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CommercialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateMaj")
                        .HasColumnType("datetime");

                    b.Property<Guid>("DisponibiliteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Numero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Numero"));

                    b.Property<Guid>("PersonneId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Poste")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PrixJour")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("StatutId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Synthese")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TokenAccesRapide")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UtiCrea")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UtiMaj")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CommercialId");

                    b.HasIndex("DisponibiliteId");

                    b.HasIndex("Numero")
                        .IsUnique();

                    b.HasIndex("PersonneId");

                    b.HasIndex("StatutId");

                    b.HasIndex("TokenAccesRapide")
                        .IsUnique();

                    b.ToTable("DossierTechniques", (string)null);
                });

            modelBuilder.Entity("Altalents.Entities.DossierTechniqueLangue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateMaj")
                        .HasColumnType("datetime");

                    b.Property<Guid>("DossierTechniqueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LangueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("NiveauId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UtiCrea")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UtiMaj")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DossierTechniqueId");

                    b.HasIndex("LangueId");

                    b.HasIndex("NiveauId");

                    b.ToTable("DossierTechniqueLangues", (string)null);
                });

            modelBuilder.Entity("Altalents.Entities.Experience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CompositionEquipe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateFin")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateMaj")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<Guid>("DomaineMetierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("3b2315eb-7b6d-40dd-b53c-bbd5eb85d3d4"));

                    b.Property<Guid>("DossierTechniqueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IntitulePoste")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar");

                    b.Property<bool>("IsEntrepriseEsnOrInterim")
                        .HasColumnType("bit");

                    b.Property<string>("LieuEntreprise")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar");

                    b.Property<string>("NomEntreprise")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar");

                    b.Property<Guid>("TypeContratId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UtiCrea")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UtiMaj")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DomaineMetierId");

                    b.HasIndex("DossierTechniqueId");

                    b.HasIndex("TypeContratId");

                    b.ToTable("Experiences", (string)null);
                });

            modelBuilder.Entity("Altalents.Entities.Formation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateFin")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateMaj")
                        .HasColumnType("datetime");

                    b.Property<string>("Domaine")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar");

                    b.Property<Guid>("DossierTechniqueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Niveau")
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("Organisme")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar");

                    b.Property<string>("UtiCrea")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UtiMaj")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DossierTechniqueId");

                    b.ToTable("Formations", (string)null);
                });

            modelBuilder.Entity("Altalents.Entities.LiaisonExperienceCompetence", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompetenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateMaj")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ExperienceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Niveau")
                        .HasColumnType("int");

                    b.Property<string>("UtiCrea")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UtiMaj")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CompetenceId");

                    b.HasIndex("ExperienceId");

                    b.ToTable("LiaisonExperienceCompetences", (string)null);
                });

            modelBuilder.Entity("Altalents.Entities.LiaisonExperienceMethodologie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateMaj")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ExperienceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MethodologieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Niveau")
                        .HasColumnType("int");

                    b.Property<string>("UtiCrea")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UtiMaj")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ExperienceId");

                    b.HasIndex("MethodologieId");

                    b.ToTable("LiaisonExperienceMethodologies", (string)null);
                });

            modelBuilder.Entity("Altalents.Entities.LiaisonExperienceOutil", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateMaj")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ExperienceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Niveau")
                        .HasColumnType("int");

                    b.Property<Guid>("OutilId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UtiCrea")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UtiMaj")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ExperienceId");

                    b.HasIndex("OutilId");

                    b.ToTable("LiaisonExperienceOutils", (string)null);
                });

            modelBuilder.Entity("Altalents.Entities.LiaisonExperienceTechnologie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateMaj")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ExperienceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Niveau")
                        .HasColumnType("int");

                    b.Property<Guid>("TechnologieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UtiCrea")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UtiMaj")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ExperienceId");

                    b.HasIndex("TechnologieId");

                    b.ToTable("LiaisonExperienceTechnologies", (string)null);
                });

            modelBuilder.Entity("Altalents.Entities.Personne", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BoondId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("DateCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateMaj")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar");

                    b.Property<string>("Trigramme")
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UtiCrea")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UtiMaj")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("BoondId")
                        .IsUnique()
                        .HasFilter("[BoondId] IS NOT NULL");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Trigramme")
                        .IsUnique()
                        .HasFilter("[Trigramme] IS NOT NULL");

                    b.HasIndex("TypeId");

                    b.ToTable("Personnes", (string)null);
                });

            modelBuilder.Entity("Altalents.Entities.ProjetOrMissionClient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CompositionEquipe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateMaj")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionProjetOrMission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DomaineMetierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ExperienceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Lieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomClientOrProjet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Taches")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtiCrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtiMaj")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DomaineMetierId");

                    b.HasIndex("ExperienceId");

                    b.ToTable("ProjetOrMissionClient");
                });

            modelBuilder.Entity("Altalents.Entities.QuestionDossierTechnique", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateMaj")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DossierTechniqueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowDt")
                        .HasColumnType("bit");

                    b.Property<int>("Ordre")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar");

                    b.Property<string>("Reponse")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("UtiCrea")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UtiMaj")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DossierTechniqueId");

                    b.ToTable("QuestionDossierTechniques", (string)null);
                });

            modelBuilder.Entity("Altalents.Entities.Reference", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar");

                    b.Property<string>("CommentaireFun")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("DateCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateMaj")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsValide")
                        .HasColumnType("bit");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("OrdreTri")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("SousType")
                        .HasMaxLength(250)
                        .HasColumnType("varchar");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar");

                    b.Property<string>("UtiCrea")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UtiMaj")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Type", "SousType");

                    b.ToTable("References", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("cc2fe62f-a81d-437b-a257-7e89b150042e"),
                            Code = "Anglais",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Anglais",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("2ad460a4-afa9-4ac0-986f-42d626b82bf1"),
                            Code = "Arabe",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Arabe",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("e47e9d1a-590d-4b4a-8f9e-219781d36902"),
                            Code = "Chinois",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Chinois",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("91cad6f6-cfb2-43bc-b5f5-a1e90ceba77c"),
                            Code = "Espagnol",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Espagnol",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("356fce26-caaa-4b4e-94d2-f7341d1851b1"),
                            Code = "Francais",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Français",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("3fbcdd3e-7dfa-46bb-bf5d-ae39e4137a07"),
                            Code = "Russe",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Russe",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("cfb960f2-d501-4154-a53a-83f9497bc0ad"),
                            Code = "Albanais",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Albanais",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("fe2be6bb-fbda-4115-bc06-5603447cbcbd"),
                            Code = "Allemand",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Allemand",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("9a5769e9-f63f-4f30-85d6-c785247a621a"),
                            Code = "Amazigh",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Amazigh",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("3ca6db24-303d-4fa3-9b5b-5cd8cfd02f11"),
                            Code = "Armenien",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Arménien",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("8883e43d-9d64-4976-a0de-cf2fce12c00d"),
                            Code = "Aymara",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Aymara",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("f3e4d4b8-4406-4098-ae7f-1ccbf938c5b8"),
                            Code = "Bengali",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Bengali",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("389314c5-b5b2-4055-85ef-a0a688b71d1c"),
                            Code = "Catalan",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Catalan",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("560f923c-27de-4891-8e96-db9fe47ca235"),
                            Code = "Coreen",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Coréen",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("077fa7cc-9f80-4d11-a791-1109ec17987b"),
                            Code = "Croate",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Croate",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("eb36539d-64bd-4cd7-adc9-27fe1c30a039"),
                            Code = "Danois",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Danois",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("41fb2299-36ec-4854-bc78-ee7899af318f"),
                            Code = "Ewe",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Éwé",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("57580b70-c631-4d9c-8dfa-920b54bfbfaf"),
                            Code = "Guarani",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Guarani",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("1fbfbf6e-957e-4565-afd1-173b5cd709d3"),
                            Code = "Grec",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Grec",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("b25017fe-4709-474d-9d28-73489c12730b"),
                            Code = "Hongrois",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Hongrois",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("b78239d4-c118-4887-8296-8494cef315bc"),
                            Code = "Italien",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Italien",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("e673effc-4ca5-46d4-bba8-0c4e5c658cb5"),
                            Code = "Japonais",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Japonais",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("21a7b72e-456c-4b07-9cda-125917d43396"),
                            Code = "Kikongo",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Kikongo",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("25c764de-a813-4848-9d13-2ffea2a2ca44"),
                            Code = "Kiswahili",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Kiswahili",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("09bf9503-dea6-4133-a3de-49d8cdcfcdc9"),
                            Code = "Lingala",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Lingala",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("792a266d-f629-419a-8346-59400b460b2d"),
                            Code = "Malgache",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Malgache",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("224a6eb6-c5c0-44a2-8504-46fa0f158527"),
                            Code = "Malais",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Malais",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("5ecd41d8-0a66-4315-b489-b26582e78e47"),
                            Code = "Mongol",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Mongol",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("ac04b377-a830-43cc-b249-3ace079a4e61"),
                            Code = "Neerlandais",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Néerlandais",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("bb490fb1-c45c-4735-ac44-3524dde36275"),
                            Code = "Occitan",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Occitan",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("7dc19496-4d9b-413a-b088-090da9f29a08"),
                            Code = "Ourdou",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Ourdou",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("f2ed3127-4acd-4e4b-90b2-b51958dc1357"),
                            Code = "Persan",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Persan",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("39577e09-4464-41bc-b9ad-e69b03ba3266"),
                            Code = "Portugais",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Portugais",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("0f6fda7c-e474-4196-8afb-1bab65bacfd1"),
                            Code = "Quechua",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Quechua",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("05c38683-5c3a-43a9-a603-c553e429ab99"),
                            Code = "Roumain",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Roumain",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("d63f7ab4-b41c-40f5-867b-03b2a7571aca"),
                            Code = "Samoan",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Samoan",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("3b004521-dc2f-43ec-bd60-5e8c95aa9dae"),
                            Code = "Serbe",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Serbe",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("cf3524e8-53a1-4170-81a0-191ebe2e9507"),
                            Code = "Sesotho",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Sesotho",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("9ed8dd18-affb-4a96-b35a-d0ed17943492"),
                            Code = "Slovaque",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Slovaque",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("3329384f-af76-4eb6-9f15-b8b838af7999"),
                            Code = "Slovene",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Slovène",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("d4a4a33a-f5d3-488c-89ad-7f552d262b88"),
                            Code = "Suedois",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Suédois",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("b809599c-6b49-452a-b26c-7438c059bbf8"),
                            Code = "Tamoul",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Tamoul",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("1aeef696-c31e-4987-84f3-2215a98bf350"),
                            Code = "Turc",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Turc",
                            OrdreTri = 0,
                            Type = "Langue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("8f486cd6-6313-47f9-a4b5-5bd535c199a9"),
                            Code = "Immediate",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Immédiate",
                            OrdreTri = 1,
                            Type = "Disponibilite",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("92dfd90f-79b4-4d5e-93e6-fb7046b3416a"),
                            Code = "SousUnMois",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Sous un mois",
                            OrdreTri = 2,
                            Type = "Disponibilite",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("f35745ef-66d0-4cb0-9657-b57c2f149e3f"),
                            Code = "SousTroisMois",
                            DateCrea = new DateTime(2024, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Sous trois mois",
                            OrdreTri = 3,
                            Type = "Disponibilite",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("aad8f403-76c8-4dee-b9b5-8ed5a8a28eec"),
                            Code = "Telephone",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Telephone",
                            OrdreTri = 1,
                            Type = "Contact",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("b3e98178-68dd-4de3-9e36-a2ed571f21c5"),
                            Code = "Cv",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Cv",
                            OrdreTri = 1,
                            Type = "Document",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("3a325813-e79d-445a-8953-b665c7581901"),
                            Code = "Dt",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Dt",
                            OrdreTri = 1,
                            Type = "Document",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("a60b074d-b4af-4157-ab49-453e28da8514"),
                            Code = "Cdi",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "CDI",
                            OrdreTri = 1,
                            Type = "Contrat",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("4c573cda-fc0c-42fa-b571-7829f26149cc"),
                            Code = "Cdd",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "CDD",
                            OrdreTri = 2,
                            Type = "Contrat",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("5f92b7d6-4ddf-4ec5-965b-9824387afa57"),
                            Code = "Cree",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Créé",
                            OrdreTri = 1,
                            Type = "StatutDt",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("c09db97a-1547-41c1-afa9-428dd1d5ba55"),
                            Code = "Inactif",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Inactif",
                            OrdreTri = 1,
                            Type = "StatutDt",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("5f1d5f70-c35d-45c2-b0b8-6ee8ff2ea1a5"),
                            Code = "EnCours",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "En Cours",
                            OrdreTri = 2,
                            Type = "StatutDt",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("610f6ca4-0f22-44ec-9269-f744873b92f2"),
                            Code = "NonValide",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Non valide",
                            OrdreTri = 3,
                            Type = "StatutDt",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("78a3cb44-9fd3-4c6c-9848-677937324ecd"),
                            Code = "Valide",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Valide",
                            OrdreTri = 4,
                            Type = "StatutDt",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("02e3d3ee-f745-4bf1-a00d-61e640dac8ae"),
                            Code = "AModifier",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "A Modifier",
                            OrdreTri = 5,
                            Type = "StatutDt",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("d47f9a2d-f4b8-42b1-a184-6e3ba4a0eba8"),
                            Code = "Candidat",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Candidat",
                            OrdreTri = 1,
                            Type = "Contact",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("307b0cc3-cd1a-41b5-854f-6b9a866e7f35"),
                            Code = "Basique",
                            CommentaireFun = "et encore",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Basique",
                            OrdreTri = 1,
                            Type = "NiveauLangue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("8b3a139d-7365-4e82-9d09-78e10a2b1919"),
                            Code = "Intermediaire",
                            CommentaireFun = "qu'est ce à dire que ceci",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Intermediaire",
                            OrdreTri = 2,
                            Type = "NiveauLangue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("2aa6bdda-0bf1-4792-9209-c3b05b37a3af"),
                            Code = "Avance",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Avance",
                            OrdreTri = 3,
                            Type = "NiveauLangue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("9398ffec-86fa-43f1-a180-478cd43b85a7"),
                            Code = "Bilingue",
                            CommentaireFun = "tu te la pète",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Bilingue",
                            OrdreTri = 4,
                            Type = "NiveauLangue",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("104ea49e-009d-49a5-b492-97fc6635d85f"),
                            Code = "GestionProjet",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Gestion de projet",
                            OrdreTri = 1,
                            Type = "Competence",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("680e7b45-9a0c-4085-816d-a63d2f108b5c"),
                            Code = "RedactionSpecifications",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Rédaction des spécifications",
                            OrdreTri = 1,
                            Type = "Competence",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("f3c51be9-857a-4096-9ec6-d51e821b3d53"),
                            Code = "DeveloppementLogiciels",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Développement des logiciels",
                            OrdreTri = 1,
                            Type = "Competence",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("74a57be3-a87a-4d0e-8154-22bf8ba93fa4"),
                            Code = "GestionEquipe",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Gestion de l’équipe",
                            OrdreTri = 1,
                            Type = "Competence",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("bd663538-52e3-49bb-8c60-4bb46a4ed9b6"),
                            Code = "Design",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Design",
                            OrdreTri = 1,
                            Type = "Competence",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("5de29a71-6a7c-459f-9cdb-acf9cf2f3447"),
                            Code = "ResponsabiliteEquipes",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Responsabilité des équipes",
                            OrdreTri = 1,
                            Type = "Competence",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("7de2d798-683d-493e-90b9-cd6e2c93aa18"),
                            Code = "AnalyseDonnees",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Analyse de données",
                            OrdreTri = 1,
                            Type = "Competence",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("5c38dce7-20a2-4aae-a29e-ed16193e92b0"),
                            Code = "MarketingDigital",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Marketing digital",
                            OrdreTri = 1,
                            Type = "Competence",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("a3853f2d-bb30-4f82-950d-77dda048c99d"),
                            Code = "Linux",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Linux",
                            OrdreTri = 1,
                            Type = "Technologie",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("a6b3992a-dd4c-4f21-b74a-5e528d47ea71"),
                            Code = "Windows",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Windows",
                            OrdreTri = 1,
                            Type = "Technologie",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("9bd90bab-2825-4f36-a49f-9227be2c1f72"),
                            Code = "Csharp",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "C#",
                            OrdreTri = 1,
                            Type = "Technologie",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("36ec7894-609d-4238-bdcd-5a5962a56eb8"),
                            Code = "Java",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Java",
                            OrdreTri = 1,
                            Type = "Technologie",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("a12fecbe-e5ec-40f8-86e5-9fc7ffcf1236"),
                            Code = "Jee",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "JEE",
                            OrdreTri = 1,
                            Type = "Technologie",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("6a575078-66ed-4151-b089-5dad1cdacc53"),
                            Code = "SCRUM",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "SCRUM",
                            OrdreTri = 1,
                            Type = "Methodologies",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("fcda6459-bf8b-468c-b8fc-999eaa3d1500"),
                            Code = "KANBAN",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "KANBAN",
                            OrdreTri = 1,
                            Type = "Methodologies",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("f9ed505f-8a9e-41fd-90e3-dc92bb0508c9"),
                            Code = "CycleV",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Cycle en V",
                            OrdreTri = 1,
                            Type = "Methodologies",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("051cbeb3-a9fe-4fad-bc3c-1cc3577d3c5d"),
                            Code = "PERT",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "PERT",
                            OrdreTri = 1,
                            Type = "Methodologies",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("88308351-55b8-4ae6-8a9a-827863f380ff"),
                            Code = "Lean",
                            DateCrea = new DateTime(2024, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Lean",
                            OrdreTri = 1,
                            Type = "Methodologies",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("d13fd336-150e-4cc0-bfc2-0bb974561de3"),
                            Code = "MicrosoftOffice365",
                            DateCrea = new DateTime(2024, 10, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Microsoft Office 365",
                            OrdreTri = 1,
                            Type = "Outil",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("fc88220d-c3b5-45ac-9de8-fcd406f96b11"),
                            Code = "MicrosoftOffice",
                            DateCrea = new DateTime(2024, 10, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Microsoft Office",
                            OrdreTri = 1,
                            Type = "Outil",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("ba160a68-8e50-4f8f-92d9-09663dc6684b"),
                            Code = "Notion",
                            DateCrea = new DateTime(2024, 10, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "Notion.so",
                            OrdreTri = 1,
                            Type = "Outil",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("c5e29778-d6ce-4d83-a663-83fa37bf861d"),
                            Code = "InVision",
                            DateCrea = new DateTime(2024, 10, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsValide = true,
                            Libelle = "inVision",
                            OrdreTri = 1,
                            Type = "Outil",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("e37ab257-7c00-4a8a-b71f-681ad18d1de2"),
                            Code = "ActivitesJuridiquesEtComptables",
                            DateCrea = new DateTime(2024, 11, 25, 16, 11, 37, 367, DateTimeKind.Local).AddTicks(9938),
                            IsValide = true,
                            Libelle = "Activités Juridiques Et Comptables",
                            OrdreTri = 1,
                            Type = "Domaine",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("21d2b28e-9d36-4d4d-8f01-f62d0ea149ef"),
                            Code = "AgricultureEtElevage",
                            DateCrea = new DateTime(2024, 11, 25, 16, 11, 37, 368, DateTimeKind.Local).AddTicks(5),
                            IsValide = true,
                            Libelle = "Agriculture Et Élevage",
                            OrdreTri = 1,
                            Type = "Domaine",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("650e788b-86b9-4884-a4eb-3582eb4f1d0d"),
                            Code = "ArchitectureEtudesEtNormes",
                            DateCrea = new DateTime(2024, 11, 25, 16, 11, 37, 368, DateTimeKind.Local).AddTicks(9),
                            IsValide = true,
                            Libelle = "Architecture Études Et Normes",
                            OrdreTri = 1,
                            Type = "Domaine",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("95b23bbb-a76b-4ed5-ba30-0ff4c1eb8870"),
                            Code = "ArtAudiovisuelEtSpectacle",
                            DateCrea = new DateTime(2024, 11, 25, 16, 11, 37, 368, DateTimeKind.Local).AddTicks(13),
                            IsValide = true,
                            Libelle = "Art Audiovisuel Et Spectacle",
                            OrdreTri = 1,
                            Type = "Domaine",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("89810245-c71d-4772-b648-3fa7b626ea69"),
                            Code = "Automobile",
                            DateCrea = new DateTime(2024, 11, 25, 16, 11, 37, 368, DateTimeKind.Local).AddTicks(16),
                            IsValide = true,
                            Libelle = "Automobile",
                            OrdreTri = 1,
                            Type = "Domaine",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("5557465c-07ad-4ffe-85e3-bf8c2c34a07f"),
                            Code = "BatimentEtTravauxPublic",
                            DateCrea = new DateTime(2024, 11, 25, 16, 11, 37, 368, DateTimeKind.Local).AddTicks(20),
                            IsValide = true,
                            Libelle = "Bâtiment Et Travaux Publics",
                            OrdreTri = 1,
                            Type = "Domaine",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("4055b77d-03a0-44f8-84dd-926fdb07f568"),
                            Code = "CommerceEtDistribution",
                            DateCrea = new DateTime(2024, 11, 25, 16, 11, 37, 368, DateTimeKind.Local).AddTicks(29),
                            IsValide = true,
                            Libelle = "Commerce Et Distribution",
                            OrdreTri = 1,
                            Type = "Domaine",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("babdff53-7380-48df-81ca-30e6da210010"),
                            Code = "CommunicationMarketing",
                            DateCrea = new DateTime(2024, 11, 25, 16, 11, 37, 368, DateTimeKind.Local).AddTicks(32),
                            IsValide = true,
                            Libelle = "Communication Et Marketing",
                            OrdreTri = 1,
                            Type = "Domaine",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("f05c980c-fd2d-454c-81d9-9afaa2f4b822"),
                            Code = "CulturePatrimoine",
                            DateCrea = new DateTime(2024, 11, 25, 16, 11, 37, 368, DateTimeKind.Local).AddTicks(36),
                            IsValide = true,
                            Libelle = "Culture Et Patrimoine",
                            OrdreTri = 1,
                            Type = "Domaine",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("c24eefc2-f4ba-463b-88fa-dca5f83e9d6f"),
                            Code = "Edition",
                            DateCrea = new DateTime(2024, 11, 25, 16, 11, 37, 368, DateTimeKind.Local).AddTicks(40),
                            IsValide = true,
                            Libelle = "Édition",
                            OrdreTri = 1,
                            Type = "Domaine",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("68940f3a-8d1a-43fe-afe9-a088fbf840f2"),
                            Code = "Energie",
                            DateCrea = new DateTime(2024, 11, 25, 16, 11, 37, 368, DateTimeKind.Local).AddTicks(43),
                            IsValide = true,
                            Libelle = "Énergie",
                            OrdreTri = 1,
                            Type = "Domaine",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("413c2810-d35c-4164-9021-73f5e50bad2b"),
                            Code = "EnseignementEtFormation",
                            DateCrea = new DateTime(2024, 11, 25, 16, 11, 37, 368, DateTimeKind.Local).AddTicks(46),
                            IsValide = true,
                            Libelle = "Enseignement Et Formation",
                            OrdreTri = 1,
                            Type = "Domaine",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("f0d37651-b240-46d7-a6a1-e01aeb2b6b08"),
                            Code = "Environnement",
                            DateCrea = new DateTime(2024, 11, 25, 16, 11, 37, 368, DateTimeKind.Local).AddTicks(50),
                            IsValide = true,
                            Libelle = "Environnement",
                            OrdreTri = 1,
                            Type = "Domaine",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("7b41cb52-4dbe-451e-bf7c-51d01a04e7e9"),
                            Code = "FinanceBanqueEtAssurance",
                            DateCrea = new DateTime(2024, 11, 25, 16, 11, 37, 368, DateTimeKind.Local).AddTicks(53),
                            IsValide = true,
                            Libelle = "Finance Banque Et Assurance",
                            OrdreTri = 1,
                            Type = "Domaine",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("bc9e9fa2-b46a-4974-9961-8814be2aa9f5"),
                            Code = "GestionAdministrativeEtRessourcesHumaine",
                            DateCrea = new DateTime(2024, 11, 25, 16, 11, 37, 368, DateTimeKind.Local).AddTicks(56),
                            IsValide = true,
                            Libelle = "Gestion Administrative Et Ressources Humaines",
                            OrdreTri = 1,
                            Type = "Domaine",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("8c479024-2491-4d30-99bf-c2d0948d36e6"),
                            Code = "HotellerieEtRestauration",
                            DateCrea = new DateTime(2024, 11, 25, 16, 11, 37, 368, DateTimeKind.Local).AddTicks(60),
                            IsValide = true,
                            Libelle = "Hôtellerie Et Restauration",
                            OrdreTri = 1,
                            Type = "Domaine",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("4052f410-0ded-4078-b065-46139c5f7f42"),
                            Code = "Immobilier",
                            DateCrea = new DateTime(2024, 11, 25, 16, 11, 37, 368, DateTimeKind.Local).AddTicks(63),
                            IsValide = true,
                            Libelle = "Immobilier",
                            OrdreTri = 1,
                            Type = "Domaine",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("f57fc24d-d771-4de2-8c56-180728b027ce"),
                            Code = "Industrie",
                            DateCrea = new DateTime(2024, 11, 25, 16, 11, 37, 368, DateTimeKind.Local).AddTicks(66),
                            IsValide = true,
                            Libelle = "Industrie",
                            OrdreTri = 1,
                            Type = "Domaine",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("939d7426-2069-4100-a8db-5ec86082fd49"),
                            Code = "InformatiqueEtTelecommunication",
                            DateCrea = new DateTime(2024, 11, 25, 16, 11, 37, 368, DateTimeKind.Local).AddTicks(70),
                            IsValide = true,
                            Libelle = "Informatique Et Télécommunication",
                            OrdreTri = 1,
                            Type = "Domaine",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("93123d1d-aa63-4e9a-b89c-72db6e616f76"),
                            Code = "LogistiqueEtTransport",
                            DateCrea = new DateTime(2024, 11, 25, 16, 11, 37, 368, DateTimeKind.Local).AddTicks(73),
                            IsValide = true,
                            Libelle = "Logistique Et Transport",
                            OrdreTri = 1,
                            Type = "Domaine",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("74536288-8a56-4ab1-9410-e9203bbaa60d"),
                            Code = "MaintenanceEntretienEtNotoyage",
                            DateCrea = new DateTime(2024, 11, 25, 16, 11, 37, 368, DateTimeKind.Local).AddTicks(77),
                            IsValide = true,
                            Libelle = "Maintenance Entretien Et Nettoyage",
                            OrdreTri = 1,
                            Type = "Domaine",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("7c1c4f41-e0e6-4b32-897c-db2799ea8b29"),
                            Code = "Recherche",
                            DateCrea = new DateTime(2024, 11, 25, 16, 11, 37, 368, DateTimeKind.Local).AddTicks(80),
                            IsValide = true,
                            Libelle = "Recherche",
                            OrdreTri = 1,
                            Type = "Domaine",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("53f64464-3ac1-4440-9cbe-c629c0244ec7"),
                            Code = "Santé",
                            DateCrea = new DateTime(2024, 11, 25, 16, 11, 37, 368, DateTimeKind.Local).AddTicks(84),
                            IsValide = true,
                            Libelle = "Santé",
                            OrdreTri = 1,
                            Type = "Domaine",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("804109be-d3de-4745-a8aa-e6535e1c3151"),
                            Code = "ServiceALaPersonne",
                            DateCrea = new DateTime(2024, 11, 25, 16, 11, 37, 368, DateTimeKind.Local).AddTicks(87),
                            IsValide = true,
                            Libelle = "Service À La Personne",
                            OrdreTri = 1,
                            Type = "Domaine",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("85e06dc8-abe0-4eb7-85df-c8f67d2f2cca"),
                            Code = "ServicePublicDefenseSecurite",
                            DateCrea = new DateTime(2024, 11, 25, 16, 11, 37, 368, DateTimeKind.Local).AddTicks(90),
                            IsValide = true,
                            Libelle = "Service Public Défense Et Sécurité",
                            OrdreTri = 1,
                            Type = "Domaine",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("a1cba742-7102-432e-b7a0-55eacf200761"),
                            Code = "Social",
                            DateCrea = new DateTime(2024, 11, 25, 16, 11, 37, 368, DateTimeKind.Local).AddTicks(94),
                            IsValide = true,
                            Libelle = "Social",
                            OrdreTri = 1,
                            Type = "Domaine",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("f5f43903-c3f7-47fd-a207-98887dd59e87"),
                            Code = "SportAnimationLoisir",
                            DateCrea = new DateTime(2024, 11, 25, 16, 11, 37, 368, DateTimeKind.Local).AddTicks(97),
                            IsValide = true,
                            Libelle = "Sport, Animation Et Loisir",
                            OrdreTri = 1,
                            Type = "Domaine",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("41a511c4-eac4-4411-9fcc-2dad63333206"),
                            Code = "Tourismne",
                            DateCrea = new DateTime(2024, 11, 25, 16, 11, 37, 368, DateTimeKind.Local).AddTicks(101),
                            IsValide = true,
                            Libelle = "Tourisme",
                            OrdreTri = 1,
                            Type = "Domaine",
                            UtiCrea = "ALTEA"
                        },
                        new
                        {
                            Id = new Guid("3b2315eb-7b6d-40dd-b53c-bbd5eb85d3d4"),
                            Code = "Tourismne",
                            DateCrea = new DateTime(2024, 11, 25, 16, 11, 37, 368, DateTimeKind.Local).AddTicks(105),
                            IsValide = true,
                            Libelle = "Autre",
                            OrdreTri = 1,
                            Type = "Domaine",
                            UtiCrea = "ALTEA"
                        });
                });

            modelBuilder.Entity("Altalents.Entities.TrigrammeLock", b =>
                {
                    b.Property<string>("Trigramme")
                        .HasMaxLength(250)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("DateLock")
                        .HasColumnType("datetime");

                    b.HasKey("Trigramme");

                    b.HasIndex("DateLock");

                    b.ToTable("TrigrammeLocks", (string)null);
                });

            modelBuilder.Entity("Altalents.Entities.Utilisateur", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateMaj")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActif")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsModifiable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSupprimable")
                        .HasColumnType("bit");

                    b.Property<string>("MotDePasseCrypte")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Poste")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Statut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TypeCompte")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("UtiCrea")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UtiMaj")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Nom");

                    b.ToTable("Utilisateurs", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f05d0f23-00b2-47fe-91ab-59ebeaa867ee"),
                            DateCrea = new DateTime(2021, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@altea-si.com",
                            IsActif = true,
                            IsDefault = false,
                            IsModifiable = false,
                            IsSupprimable = false,
                            MotDePasseCrypte = "AQAAAAIAAYagAAAAEJJ8k1QzsOQCivB/OZ4fO3oRItU9ubWJwyTeSVD8FisyZN0vG9+vG72E5MCF35op2w==",
                            Nom = "Super administrateur",
                            Statut = "Admin",
                            TypeCompte = "Admin",
                            UtiCrea = "ALTEA"
                        });
                });

            modelBuilder.Entity("Altalents.Entities.Adresse", b =>
                {
                    b.HasOne("Altalents.Entities.Personne", "Personne")
                        .WithMany("Adresses")
                        .HasForeignKey("PersonneId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Personne");
                });

            modelBuilder.Entity("Altalents.Entities.Certification", b =>
                {
                    b.HasOne("Altalents.Entities.DossierTechnique", "DossierTechnique")
                        .WithMany("Certifications")
                        .HasForeignKey("DossierTechniqueId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("DossierTechnique");
                });

            modelBuilder.Entity("Altalents.Entities.Contact", b =>
                {
                    b.HasOne("Altalents.Entities.Personne", "Personne")
                        .WithMany("Contacts")
                        .HasForeignKey("PersonneId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Altalents.Entities.Reference", "Type")
                        .WithMany("Contacts")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personne");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Altalents.Entities.Document", b =>
                {
                    b.HasOne("Altalents.Entities.Personne", "Personne")
                        .WithMany("Documents")
                        .HasForeignKey("PersonneId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Altalents.Entities.Reference", "Type")
                        .WithMany("Documents")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personne");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Altalents.Entities.DocumentComplementaire", b =>
                {
                    b.HasOne("Altalents.Entities.DossierTechnique", "DossierTechnique")
                        .WithMany("DocumentComplementaires")
                        .HasForeignKey("DossierTechniqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DossierTechnique");
                });

            modelBuilder.Entity("Altalents.Entities.DossierTechnique", b =>
                {
                    b.HasOne("Altalents.Entities.Utilisateur", "Commercial")
                        .WithMany("DossierTechniques")
                        .HasForeignKey("CommercialId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Altalents.Entities.Reference", "Disponibilite")
                        .WithMany("DossierTechniquesByDisponibilite")
                        .HasForeignKey("DisponibiliteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Altalents.Entities.Personne", "Personne")
                        .WithMany("DossierTechniques")
                        .HasForeignKey("PersonneId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Altalents.Entities.Reference", "Statut")
                        .WithMany("DossierTechniquesByStatut")
                        .HasForeignKey("StatutId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Commercial");

                    b.Navigation("Disponibilite");

                    b.Navigation("Personne");

                    b.Navigation("Statut");
                });

            modelBuilder.Entity("Altalents.Entities.DossierTechniqueLangue", b =>
                {
                    b.HasOne("Altalents.Entities.DossierTechnique", "DossierTechnique")
                        .WithMany("DossierTechniqueLangues")
                        .HasForeignKey("DossierTechniqueId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Altalents.Entities.Reference", "Langue")
                        .WithMany("PersonneLangues")
                        .HasForeignKey("LangueId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Altalents.Entities.Reference", "Niveau")
                        .WithMany("NiveauLangues")
                        .HasForeignKey("NiveauId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("DossierTechnique");

                    b.Navigation("Langue");

                    b.Navigation("Niveau");
                });

            modelBuilder.Entity("Altalents.Entities.Experience", b =>
                {
                    b.HasOne("Altalents.Entities.Reference", "DomaineMetier")
                        .WithMany("DomaineExperiences")
                        .HasForeignKey("DomaineMetierId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Altalents.Entities.DossierTechnique", "DossierTechnique")
                        .WithMany("Experiences")
                        .HasForeignKey("DossierTechniqueId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Altalents.Entities.Reference", "TypeContrat")
                        .WithMany("TypeContratExperiences")
                        .HasForeignKey("TypeContratId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("DomaineMetier");

                    b.Navigation("DossierTechnique");

                    b.Navigation("TypeContrat");
                });

            modelBuilder.Entity("Altalents.Entities.Formation", b =>
                {
                    b.HasOne("Altalents.Entities.DossierTechnique", "DossierTechnique")
                        .WithMany("Formations")
                        .HasForeignKey("DossierTechniqueId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("DossierTechnique");
                });

            modelBuilder.Entity("Altalents.Entities.LiaisonExperienceCompetence", b =>
                {
                    b.HasOne("Altalents.Entities.Reference", "Competance")
                        .WithMany("LiaisonExperienceCompetances")
                        .HasForeignKey("CompetenceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Altalents.Entities.Experience", "Experience")
                        .WithMany("LiaisonExperienceCompetences")
                        .HasForeignKey("ExperienceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Competance");

                    b.Navigation("Experience");
                });

            modelBuilder.Entity("Altalents.Entities.LiaisonExperienceMethodologie", b =>
                {
                    b.HasOne("Altalents.Entities.Experience", "Experience")
                        .WithMany("LiaisonExperienceMethodologies")
                        .HasForeignKey("ExperienceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Altalents.Entities.Reference", "Methodologie")
                        .WithMany("LiaisonExperienceMethodologies")
                        .HasForeignKey("MethodologieId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Experience");

                    b.Navigation("Methodologie");
                });

            modelBuilder.Entity("Altalents.Entities.LiaisonExperienceOutil", b =>
                {
                    b.HasOne("Altalents.Entities.Experience", "Experience")
                        .WithMany("LiaisonExperienceOutils")
                        .HasForeignKey("ExperienceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Altalents.Entities.Reference", "Outil")
                        .WithMany("LiaisonExperienceOutils")
                        .HasForeignKey("OutilId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Experience");

                    b.Navigation("Outil");
                });

            modelBuilder.Entity("Altalents.Entities.LiaisonExperienceTechnologie", b =>
                {
                    b.HasOne("Altalents.Entities.Experience", "Experience")
                        .WithMany("LiaisonExperienceTechnologies")
                        .HasForeignKey("ExperienceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Altalents.Entities.Reference", "Technologie")
                        .WithMany("LiaisonExperienceTechnologies")
                        .HasForeignKey("TechnologieId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Experience");

                    b.Navigation("Technologie");
                });

            modelBuilder.Entity("Altalents.Entities.Personne", b =>
                {
                    b.HasOne("Altalents.Entities.Reference", "Type")
                        .WithMany("Personnes")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Altalents.Entities.ProjetOrMissionClient", b =>
                {
                    b.HasOne("Altalents.Entities.Reference", "DomaineMetier")
                        .WithMany()
                        .HasForeignKey("DomaineMetierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Altalents.Entities.Experience", "Experience")
                        .WithMany("ProjetsOrMissionsClient")
                        .HasForeignKey("ExperienceId");

                    b.Navigation("DomaineMetier");

                    b.Navigation("Experience");
                });

            modelBuilder.Entity("Altalents.Entities.QuestionDossierTechnique", b =>
                {
                    b.HasOne("Altalents.Entities.DossierTechnique", "DossierTechnique")
                        .WithMany("QuestionDossierTechniques")
                        .HasForeignKey("DossierTechniqueId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("DossierTechnique");
                });

            modelBuilder.Entity("Altalents.Entities.DossierTechnique", b =>
                {
                    b.Navigation("Certifications");

                    b.Navigation("DocumentComplementaires");

                    b.Navigation("DossierTechniqueLangues");

                    b.Navigation("Experiences");

                    b.Navigation("Formations");

                    b.Navigation("QuestionDossierTechniques");
                });

            modelBuilder.Entity("Altalents.Entities.Experience", b =>
                {
                    b.Navigation("LiaisonExperienceCompetences");

                    b.Navigation("LiaisonExperienceMethodologies");

                    b.Navigation("LiaisonExperienceOutils");

                    b.Navigation("LiaisonExperienceTechnologies");

                    b.Navigation("ProjetsOrMissionsClient");
                });

            modelBuilder.Entity("Altalents.Entities.Personne", b =>
                {
                    b.Navigation("Adresses");

                    b.Navigation("Contacts");

                    b.Navigation("Documents");

                    b.Navigation("DossierTechniques");
                });

            modelBuilder.Entity("Altalents.Entities.Reference", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("Documents");

                    b.Navigation("DomaineExperiences");

                    b.Navigation("DossierTechniquesByDisponibilite");

                    b.Navigation("DossierTechniquesByStatut");

                    b.Navigation("LiaisonExperienceCompetances");

                    b.Navigation("LiaisonExperienceMethodologies");

                    b.Navigation("LiaisonExperienceOutils");

                    b.Navigation("LiaisonExperienceTechnologies");

                    b.Navigation("NiveauLangues");

                    b.Navigation("PersonneLangues");

                    b.Navigation("Personnes");

                    b.Navigation("TypeContratExperiences");
                });

            modelBuilder.Entity("Altalents.Entities.Utilisateur", b =>
                {
                    b.Navigation("DossierTechniques");
                });
#pragma warning restore 612, 618
        }
    }
}
